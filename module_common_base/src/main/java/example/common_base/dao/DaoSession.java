package example.common_base.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import example.common_base.entity.ChatMessageEntity;
import example.common_base.entity.ChatSessionEntity;
import example.common_base.entity.UserEntity;

import example.common_base.dao.ChatMessageEntityDao;
import example.common_base.dao.ChatSessionEntityDao;
import example.common_base.dao.UserEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig chatMessageEntityDaoConfig;
    private final DaoConfig chatSessionEntityDaoConfig;
    private final DaoConfig userEntityDaoConfig;

    private final ChatMessageEntityDao chatMessageEntityDao;
    private final ChatSessionEntityDao chatSessionEntityDao;
    private final UserEntityDao userEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        chatMessageEntityDaoConfig = daoConfigMap.get(ChatMessageEntityDao.class).clone();
        chatMessageEntityDaoConfig.initIdentityScope(type);

        chatSessionEntityDaoConfig = daoConfigMap.get(ChatSessionEntityDao.class).clone();
        chatSessionEntityDaoConfig.initIdentityScope(type);

        userEntityDaoConfig = daoConfigMap.get(UserEntityDao.class).clone();
        userEntityDaoConfig.initIdentityScope(type);

        chatMessageEntityDao = new ChatMessageEntityDao(chatMessageEntityDaoConfig, this);
        chatSessionEntityDao = new ChatSessionEntityDao(chatSessionEntityDaoConfig, this);
        userEntityDao = new UserEntityDao(userEntityDaoConfig, this);

        registerDao(ChatMessageEntity.class, chatMessageEntityDao);
        registerDao(ChatSessionEntity.class, chatSessionEntityDao);
        registerDao(UserEntity.class, userEntityDao);
    }
    
    public void clear() {
        chatMessageEntityDaoConfig.clearIdentityScope();
        chatSessionEntityDaoConfig.clearIdentityScope();
        userEntityDaoConfig.clearIdentityScope();
    }

    public ChatMessageEntityDao getChatMessageEntityDao() {
        return chatMessageEntityDao;
    }

    public ChatSessionEntityDao getChatSessionEntityDao() {
        return chatSessionEntityDao;
    }

    public UserEntityDao getUserEntityDao() {
        return userEntityDao;
    }

}
